{"version":3,"sources":["API/index.js","components/Card.js","components/Filters.js","App.js","index.js"],"names":["language","blackListFilters","jokeTypes","a","filtersString","nsfw","value","text","explicit","religious","political","typesString","pun","dark","programming","spooky","substring","length","fetch","response","json","console","log","message","StyledCard","styled","div","CardText","DeleteButton","TrashOutline","Card","props","color","title","height","width","onClick","onDelete","StyledCheckbox","input","CheckBoxesRow","FilterContainer","Container","Label","label","Title","Filters","filtersArray","map","filter","index","type","name","onChange","updateFilters","Spinner","Loader","CardsContainer","PageTitle","Page","Row","Button","button","Select","select","languages","iso","initialBlackListFilters","initialJokeTypes","App","useState","jokes","setJokes","searching","setSearching","setJokeTypes","setBlackListFilters","setLanguage","e","target","Object","entries","typeToUpdate","updatedTypes","filterToUpdate","updatedFilters","getData","then","joke","setup","delivery","concat","jokeToRemove","currentItems","ReactDOM","render","document","getElementById"],"mappings":"iQAAO,WAAuBA,EAAUC,EAAkBC,GAAnD,mBAAAC,EAAA,sEAEKC,EAFL,uCAEqDH,EAAiBI,KAAKC,MAAtB,UAAiCL,EAAiBI,KAAKE,KAAvD,KAAiE,IAFtH,OAE2HN,EAAiBO,SAASF,MAA1B,UAAqCL,EAAiBO,SAASD,KAA/D,KAAyE,IAFpM,OAEyMN,EAAiBQ,UAAUH,MAA3B,UAAsCL,EAAiBQ,UAAUF,KAAjE,KAA2E,IAFpR,OAEyRN,EAAiBS,UAAUJ,MAA3B,UAAsCL,EAAiBS,UAAUH,KAAjE,KAA2E,IAC/VI,EAAc,OACdT,EAAUU,IAAIN,OAASJ,EAAUW,KAAKP,OAASJ,EAAUY,YAAYR,OAASJ,EAAUa,OAAOT,SAE/FK,GADAA,EAAW,UAAMT,EAAUU,IAAIN,MAAd,UAAyBJ,EAAUU,IAAIL,KAAvC,KAAiD,IAAvD,OAA4DL,EAAUW,KAAKP,MAAf,UAA0BJ,EAAUW,KAAKN,KAAzC,KAAmD,IAA/G,OAAoHL,EAAUY,YAAYR,MAAtB,UAAiCJ,EAAUY,YAAYP,KAAvD,KAAiE,IAArL,OAA0LL,EAAUa,OAAOT,MAAjB,UAA4BJ,EAAUa,OAAOR,KAA7C,KAAuD,KAClOS,UAAU,EAAGL,EAAYM,OAAS,IANjE,SAQsBC,MAAM,+BAAD,OAAgCP,EAAhC,iBAAoDX,EAApD,qBAAyEI,IARpG,cAQKe,EARL,yBASQA,EAASC,QATjB,kCAWCC,QAAQC,IAAR,4BAAiC,KAAMC,UAXxC,2D,kFCIDC,EAAaC,UAAOC,IAAV,uSAcVC,EAAWF,UAAOC,IAAV,0IAORE,EAAeH,kBAAOI,eAAPJ,CAAH,wLA4BHK,EAjBF,SAACC,GACV,OACI,eAACP,EAAD,WACI,cAACI,EAAD,CACII,MAAO,SACPC,MAAO,SACPC,OAAO,OACPC,MAAM,OACNC,QAASL,EAAMM,WAEnB,cAACV,EAAD,UACKI,EAAMxB,WC5CjB+B,EAAiBb,UAAOc,MAAV,qEAMdC,EAAgBf,UAAOC,IAAV,qHAObe,EAAkBhB,UAAOC,IAAV,0EAKfgB,EAAYjB,UAAOC,IAAV,2KASTiB,EAAQlB,UAAOmB,MAAV,mDAILC,EAAQpB,UAAOmB,MAAV,iGA8BIE,EAxBC,SAACf,GACb,OACI,eAACW,EAAD,WACI,cAACG,EAAD,UAAQd,EAAMa,QACd,cAACJ,EAAD,UACKT,EAAMgB,aAAaC,KAAI,SAACC,EAAQC,GAAT,OACpB,eAACT,EAAD,WACI,cAACE,EAAD,UAGKM,EAAO,IAFHC,GAIT,cAACZ,EAAD,CACIa,KAAK,WACLC,KAAMH,EAAO,GACbI,SAAU,kBAAMtB,EAAMuB,cAAcL,EAAO,mB,iBC/CjEM,EAAU9B,kBAAO+B,IAAP/B,CAAH,6EAKPgC,EAAiBhC,UAAOC,IAAV,4MASdgC,EAAYjC,UAAOC,IAAV,qEAKTiC,EAAOlC,UAAOC,IAAV,kLASJkC,EAAMnC,UAAOC,IAAV,oHAOHmC,EAASpC,UAAOqC,OAAV,0RAcNC,EAAStC,UAAOuC,OAAV,6KASNrB,EAAQlB,UAAOmB,MAAV,gDAILqB,GAAY,CAChB,CAAEC,IAAK,KAAMtB,MAAO,WACpB,CAAEsB,IAAK,KAAMtB,MAAO,UACpB,CAAEsB,IAAK,KAAMtB,MAAO,WACpB,CAAEsB,IAAK,KAAMtB,MAAO,UACpB,CAAEsB,IAAK,KAAMtB,MAAO,cACpB,CAAEsB,IAAK,KAAMtB,MAAO,UAGhBuB,GAA0B,CAC9B9D,KAAM,CAAEC,OAAO,EAAOC,KAAM,QAC5BC,SAAU,CAAEF,OAAO,EAAOC,KAAM,YAChCE,UAAW,CAAEH,OAAO,EAAOC,KAAM,aACjCG,UAAW,CAAEJ,OAAO,EAAOC,KAAM,cAG7B6D,GAAmB,CACvBxD,IAAK,CAAEN,OAAO,EAAOC,KAAM,OAC3BM,KAAM,CAAEP,OAAO,EAAOC,KAAM,QAC5BO,YAAa,CAAER,OAAO,EAAOC,KAAM,eACnCQ,OAAQ,CAAET,OAAO,EAAOC,KAAM,WA8EjB8D,GA3EH,SAAAtC,GACV,MAA0BuC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAkCJ,mBAASF,IAA3C,mBAAOlE,EAAP,KAAkByE,EAAlB,KACA,EAAgDL,mBAASH,IAAzD,mBAAOlE,EAAP,KAAyB2E,EAAzB,KACA,EAAgCN,mBAASL,GAAU,GAAGC,KAAtD,mBAAOlE,EAAP,KAAiB6E,EAAjB,KA0BA,OACE,eAAClB,EAAD,WACE,cAACD,EAAD,UAAY3B,EAAME,QAClB,cAAC2B,EAAD,UACE,eAAC,EAAD,wBAEE,cAACG,EAAD,CACEX,KAAK,YACLC,SAAU,SAAAyB,GAAOD,EAAYC,EAAEC,OAAOzE,QAFxC,SAIG2D,GAAUjB,KAAI,SAAAhD,GAAQ,OACrB,wBACEM,MAAON,EAASkE,IADlB,SAGGlE,EAAS4C,OADL5C,EAASkE,eAOxB,cAAC,EAAD,CACEtB,MAAM,kBACNG,aAAciC,OAAOC,QAAQ/E,GAC7BoD,cA7Bc,SAAA4B,GAClB,IAAMC,EAAY,eAAQjF,GAC1BiF,EAAaD,GAAc5E,OAAS6E,EAAaD,GAAc5E,MAC/DqE,EAAaQ,MA4BX,cAAC,EAAD,CACEvC,MAAM,YACNG,aAAciC,OAAOC,QAAQhF,GAC7BqD,cAxCgB,SAAA8B,GACpB,IAAMC,EAAc,eAAQpF,GAC5BoF,EAAeD,GAAgB9E,OAAS+E,EAAeD,GAAgB9E,MACvEsE,EAAoBS,MAuClB,cAACxB,EAAD,CAAQzB,QAtDI,WACdsC,GAAa,GHrGV,SAAP,sCGsGIY,CAAQtF,EAAUC,EAAkBC,GAAWqF,MAAK,SAAAC,GAClDhB,EAAS,CAAc,WAAbgB,EAAKrC,KAAL,UAA4BqC,EAAKC,MAAjC,YAA0CD,EAAKE,UAAaF,EAAKA,MAAMG,OAAOpB,IACxFG,GAAa,OAkDb,sBACCD,GAAa,cAAClB,EAAD,CAASJ,KAAK,UAAUnB,MAAM,QAAQE,OAAQ,GAAIC,MAAO,KACvE,cAACsB,EAAD,UACGc,EAAMvB,KAAI,SAACwC,EAAMtC,GAAP,OACT,cAAC,EAAD,CACE3C,KAAMiF,EAENnD,SAAU,kBArDAuD,EAqDiBJ,OApDnChB,GAAS,SAAAqB,GAAY,OAAIA,EAAa5C,QAAO,SAACuC,GAAD,OAAUA,IAASI,QAD/C,IAACA,IAoDL1C,YC5JjB4C,IAASC,OACP,cAAC,GAAD,CAAK9D,MAAM,2BACX+D,SAASC,eAAe,U","file":"static/js/main.ccb54f88.chunk.js","sourcesContent":["export async function getData(language, blackListFilters, jokeTypes) {\r\n    try {\r\n        let filtersString = `blacklistFlags=sexist,racist,${blackListFilters.nsfw.value ? `${blackListFilters.nsfw.text},` : ''}${blackListFilters.explicit.value ? `${blackListFilters.explicit.text},` : ''}${blackListFilters.religious.value ? `${blackListFilters.religious.text},` : ''}${blackListFilters.political.value ? `${blackListFilters.political.text},` : ''}`\r\n        let typesString = \"Any\"\r\n        if (jokeTypes.pun.value || jokeTypes.dark.value || jokeTypes.programming.value || jokeTypes.spooky.value) {\r\n            typesString = `${jokeTypes.pun.value ? `${jokeTypes.pun.text},` : ''}${jokeTypes.dark.value ? `${jokeTypes.dark.text},` : ''}${jokeTypes.programming.value ? `${jokeTypes.programming.text},` : ''}${jokeTypes.spooky.value ? `${jokeTypes.spooky.text},` : ''}`\r\n            typesString = typesString.substring(0, typesString.length - 1);\r\n        }\r\n        let response = await fetch(`https://v2.jokeapi.dev/joke/${typesString}?lang=${language}&safe-mode${filtersString}`)\r\n        return response.json()\r\n    } catch (error) {\r\n        console.log(`Issue with fetch: ${error.message}`);\r\n    }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { TrashOutline } from 'react-ionicons'\r\n\r\nconst StyledCard = styled.div`\r\n  background-color: #2d3038;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  box-shadow: 1px 1px 1px 1px #0e1529;\r\n  margin: 5px 10px;\r\n  max-width: 500px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: stretch;\r\n  position: relative;\r\n  font-size: 22px;\r\n`;\r\n\r\nconst CardText = styled.div`\r\n  background-color: #3d424d;\r\n  border-radius: 10px;\r\n  padding: 10px 10px 35px 10px;\r\n  margin-bottom: 2px;\r\n`;\r\n\r\nconst DeleteButton = styled(TrashOutline)`\r\n    position: absolute;\r\n    bottom: 10px;\r\n    right: 10px;\r\n    padding: 2px;\r\n    border-radius: 50%;\r\n    &:active{\r\n      background: #959db3;\r\n    }\r\n`;\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <StyledCard>\r\n            <DeleteButton\r\n                color={'#00000'}\r\n                title={'delete'}\r\n                height=\"26px\"\r\n                width=\"26px\"\r\n                onClick={props.onDelete}\r\n            />\r\n            <CardText>\r\n                {props.text}\r\n            </CardText>\r\n        </StyledCard>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledCheckbox = styled.input`\r\n    margin: 0;\r\n    margin-left: 5px;\r\n\r\n`;\r\n\r\nconst CheckBoxesRow = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    padding: 5px 0;\r\n`;\r\n\r\nconst FilterContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 5px;\r\n    margin: 5px 0;\r\n    border-radius: 10px;\r\n    background-color: #2d3038;\r\n`;\r\n\r\nconst Label = styled.label`\r\n    margin-left: 5px;\r\n`;\r\n\r\nconst Title = styled.label`\r\n    font-size: 17px;\r\n    font-weight: 600;\r\n    margin-right: 5px;\r\n`;\r\n\r\nconst Filters = (props) => {\r\n    return (\r\n        <Container>\r\n            <Title>{props.label}</Title>\r\n            <CheckBoxesRow>\r\n                {props.filtersArray.map((filter, index) =>\r\n                    <FilterContainer>\r\n                        <Label\r\n                            key={index}\r\n                        >\r\n                            {filter[0]}\r\n                        </Label>\r\n                        <StyledCheckbox\r\n                            type='checkbox'\r\n                            name={filter[0]}\r\n                            onChange={() => props.updateFilters(filter[0])}\r\n                        />\r\n                    </FilterContainer>\r\n                )}\r\n            </CheckBoxesRow>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Filters;","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport { getData } from './API';\r\nimport Card from \"./components/Card\"\r\nimport Filters from \"./components/Filters\"\r\nimport styled from 'styled-components';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst Spinner = styled(Loader)`\r\n    width: fit-content;\r\n    margin: 20px auto;\r\n`;\r\n\r\nconst CardsContainer = styled.div`\r\n    background-color: #3d424d;\r\n    font-size: calc(8px + 2vmin);\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: 'center';\r\n    justify-content: 'center';\r\n`;\r\n\r\nconst PageTitle = styled.div`\r\n    margin: 10px;\r\n    font-size: 28px;\r\n`;\r\n\r\nconst Page = styled.div`\r\n    color: white;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background-color: #3d424d;\r\n    min-height: 100vh;\r\n`;\r\n\r\nconst Row = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    margin: 5px 0;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    margin: 5px 10px;\r\n    background: #2d3038;\r\n    color: white;\r\n    border: 2px solid #1e2025;\r\n    border-radius: 10px;\r\n    padding: 10px;\r\n    font-size: 20px;\r\n    &:active{\r\n      background: #414550;\r\n      transform: translateY(2px);\r\n    };\r\n`;\r\n\r\nconst Select = styled.select`\r\n    font-size: 18px;\r\n    color: white;\r\n    background-color: #3d424d;\r\n    border-width: 2px;\r\n    border-radius: 5px;\r\n    margin-left: 5px;\r\n`;\r\n\r\nconst Label = styled.label`\r\n    margin: 0 7px;\r\n`;\r\n\r\nconst languages = [\r\n  { iso: \"en\", label: \"English\" },\r\n  { iso: \"fr\", label: \"French\" },\r\n  { iso: \"es\", label: \"Spanish\" },\r\n  { iso: \"de\", label: \"German\" },\r\n  { iso: \"pt\", label: \"Portuguese\" },\r\n  { iso: \"cs\", label: \"Czech\" }\r\n]\r\n\r\nconst initialBlackListFilters = {\r\n  nsfw: { value: false, text: 'nsfw' },\r\n  explicit: { value: false, text: 'explicit' },\r\n  religious: { value: false, text: 'religious' },\r\n  political: { value: false, text: 'political' }\r\n}\r\n\r\nconst initialJokeTypes = {\r\n  pun: { value: false, text: 'Pun' },\r\n  dark: { value: false, text: 'Dark' },\r\n  programming: { value: false, text: 'Programming' },\r\n  spooky: { value: false, text: 'Spooky' }\r\n}\r\n\r\nconst App = props => {\r\n  const [jokes, setJokes] = useState([])\r\n  const [searching, setSearching] = useState(false)\r\n  const [jokeTypes, setJokeTypes] = useState(initialJokeTypes)\r\n  const [blackListFilters, setBlackListFilters] = useState(initialBlackListFilters)\r\n  const [language, setLanguage] = useState(languages[0].iso)\r\n\r\n  const getJoke = () => {\r\n    setSearching(true)\r\n    getData(language, blackListFilters, jokeTypes).then(joke => {\r\n      setJokes([joke.type == 'twopart' ? `${joke.setup} ${joke.delivery}` : joke.joke].concat(jokes))\r\n      setSearching(false)\r\n    })\r\n  }\r\n\r\n  const removeJoke = (jokeToRemove) => {\r\n    setJokes(currentItems => currentItems.filter((joke) => joke !== jokeToRemove))\r\n  }\r\n\r\n  const updateFilters = filterToUpdate => {\r\n    const updatedFilters = { ...blackListFilters };\r\n    updatedFilters[filterToUpdate].value = !updatedFilters[filterToUpdate].value\r\n    setBlackListFilters(updatedFilters)\r\n  }\r\n\r\n  const updateTypes = typeToUpdate => {\r\n    const updatedTypes = { ...jokeTypes };\r\n    updatedTypes[typeToUpdate].value = !updatedTypes[typeToUpdate].value\r\n    setJokeTypes(updatedTypes)\r\n  }\r\n\r\n  return (\r\n    <Page>\r\n      <PageTitle>{props.title}</PageTitle>\r\n      <Row>\r\n        <Label>\r\n          Languages:\r\n          <Select\r\n            name=\"languages\"\r\n            onChange={e => { setLanguage(e.target.value) }}\r\n          >\r\n            {languages.map(language =>\r\n              <option\r\n                value={language.iso}\r\n                key={language.iso}>\r\n                {language.label}\r\n              </option>\r\n            )}\r\n          </Select>\r\n        </Label>\r\n      </Row>\r\n      <Filters\r\n        label='Include Types: '\r\n        filtersArray={Object.entries(jokeTypes)}\r\n        updateFilters={updateTypes}\r\n      />\r\n      <Filters\r\n        label='Exclude: '\r\n        filtersArray={Object.entries(blackListFilters)}\r\n        updateFilters={updateFilters}\r\n      />\r\n      <Button onClick={getJoke} >Generate</Button>\r\n      {searching && <Spinner type=\"Circles\" color=\"white\" height={80} width={80} />}\r\n      <CardsContainer>\r\n        {jokes.map((joke, index) =>\r\n          <Card\r\n            text={joke}\r\n            key={index}\r\n            onDelete={() => removeJoke(joke)}\r\n          />\r\n        )}\r\n      </CardsContainer>\r\n    </Page>\r\n  )\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App title=\"Random Jokes Generator\" />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}